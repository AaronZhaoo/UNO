Index: src/view/InitializedView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\nimport interface_adapter.Initialized.InitializedState;\nimport interface_adapter.Initialized.InitializedViewModel;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\n\npublic class InitializedView extends JPanel implements ActionListener, PropertyChangeListener {\n    public final String viewName = \"Initialized\";\n    private final InitializedViewModel initializedViewModel;\n\n    JLabel playername;\n\n    public InitializedView(InitializedViewModel initializedViewModel) {\n        this.initializedViewModel = initializedViewModel;\n        this.initializedViewModel.addPropertyChangeListener(this);\n\n        JLabel title = new JLabel(\"Initialized Screen\");\n        title.setAlignmentX(Component.CENTER_ALIGNMENT);\n\n        JLabel usernameInfo = new JLabel(\"Currently players: \");\n        playername = new JLabel();\n\n        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n\n        this.add(title);\n        this.add(usernameInfo);\n        this.add(playername);\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        System.out.println(\"Click \" + e.getActionCommand());\n    }\n\n    @Override\n    public void propertyChange(PropertyChangeEvent evt) {\n        InitializedState state = (InitializedState) evt.getNewValue();\n        playername.setText(state.get_players().get(0));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/InitializedView.java b/src/view/InitializedView.java
--- a/src/view/InitializedView.java	(revision 83495c8ce5ae8c78b95af7f344403e919a71915c)
+++ b/src/view/InitializedView.java	(date 1700267501466)
@@ -44,3 +44,74 @@
         playername.setText(state.get_players().get(0));
     }
 }
+//public class InitializedView extends JFrame {
+//
+//    public InitializedView() {
+//        setTitle("UNO Game");
+//        setSize(800, 600);
+//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+//        initializeUI();
+//    }
+//
+//    private void initializeUI() {
+//        JPanel mainPanel = new JPanel();
+//        mainPanel.setLayout(new BorderLayout());
+//        mainPanel.setBackground(Color.RED);
+//
+//
+//        JPanel playerPanel = new JPanel();
+//        playerPanel.setLayout(new GridLayout(1, 4, 10, 10));
+//        playerPanel.setOpaque(false);
+//
+//
+//        for (int i = 1; i <= 4; i++) {
+//            JPanel playerInfo = new JPanel();
+//            playerInfo.setLayout(new BorderLayout());
+//            playerInfo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
+//            JLabel usernameLabel = new JLabel("PLAYER " + i + " USERNAME");
+//            JLabel scoreLabel = new JLabel("Score: 0");
+//            playerInfo.add(usernameLabel, BorderLayout.NORTH);
+//            playerInfo.add(scoreLabel, BorderLayout.SOUTH);
+//            playerPanel.add(playerInfo);
+//        }
+//
+//
+//        JPanel cardPanel = new JPanel();
+//        cardPanel.setLayout(new FlowLayout());
+//        cardPanel.setOpaque(false);
+//
+//
+//        for (int i = 0; i < 7; i++) {
+//            JButton cardButton = new JButton("Card " + i);
+//            cardPanel.add(cardButton);
+//        }
+//
+//        JPanel controlPanel = new JPanel();
+//        controlPanel.setLayout(new FlowLayout());
+//        controlPanel.setOpaque(false);
+//
+//        JButton getCardButton = new JButton("Get Card");
+//        JButton undoButton = new JButton("Undo");
+//        JButton confirmButton = new JButton("Confirm");
+//        JButton nextTurnButton = new JButton("Next Turn");
+//
+//        controlPanel.add(getCardButton);
+//        controlPanel.add(undoButton);
+//        controlPanel.add(confirmButton);
+//        controlPanel.add(nextTurnButton);
+//
+//        mainPanel.add(playerPanel, BorderLayout.NORTH);
+//        mainPanel.add(cardPanel, BorderLayout.CENTER);
+//        mainPanel.add(controlPanel, BorderLayout.SOUTH);
+//
+//        add(mainPanel);
+//    }
+//
+//    public static void main(String[] args) {
+//        SwingUtilities.invokeLater(new Runnable() {
+//            public void run() {
+//                new InitializedView().setVisible(true);
+//            }
+//        });
+//    }
+//}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM__Changes_.xml	(revision 83495c8ce5ae8c78b95af7f344403e919a71915c)
+++ /dev/null	(revision 83495c8ce5ae8c78b95af7f344403e919a71915c)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]" date="1699477537438" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/8/2023 4:03 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="out/production/project/APIClient.class" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_8_2023_4_03_PM_[Changes]/shelved.patch	(revision 83495c8ce5ae8c78b95af7f344403e919a71915c)
+++ /dev/null	(revision 83495c8ce5ae8c78b95af7f344403e919a71915c)
@@ -1,114 +0,0 @@
-Index: src/Data_access/FileUserDataAccessObject.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package Data_access;\r\n\r\nimport use_case.initiation.InitiationDataAccessInterface;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.time.LocalDateTime;\r\nimport java.util.HashMap;\r\nimport java.util.LinkedHashMap;\r\nimport java.util.Map;\r\n\r\npublic class FileUserDataAccessObject implements InitiationDataAccessInterface {\r\n    private final File csvFile;\r\n\r\n    private final Map<String, Integer> headers = new LinkedHashMap<>();\r\n\r\n\r\n    public FileUserDataAccessObject(String csvPath) throws IOException {\r\n\r\n        csvFile = new File(csvPath);\r\n        headers.put(\"playername\", 0);\r\n        headers.put(\"userID\", 1);\r\n        headers.put(\"numcards\", 2);\r\n        headers.put(\"funccards\", 3);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void create() {\r\n        ;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Data_access/FileUserDataAccessObject.java b/src/Data_access/FileUserDataAccessObject.java
---- a/src/Data_access/FileUserDataAccessObject.java	(revision c6a2feb9926500bbb66f83ef1cc0aca98eb2bc6b)
-+++ b/src/Data_access/FileUserDataAccessObject.java	(date 1699409003592)
-@@ -1,5 +1,6 @@
- package Data_access;
- 
-+import entities.player.PlayerFactory;
- import use_case.initiation.InitiationDataAccessInterface;
- 
- import java.io.BufferedReader;
-@@ -16,8 +17,10 @@
- 
-     private final Map<String, Integer> headers = new LinkedHashMap<>();
- 
-+    private PlayerFactory playerFactory;
- 
--    public FileUserDataAccessObject(String csvPath) throws IOException {
-+    public FileUserDataAccessObject(String csvPath, PlayerFactory playerFactory) throws IOException {
-+        this.playerFactory = playerFactory;
- 
-         csvFile = new File(csvPath);
-         headers.put("playername", 0);
-Index: src/app/Main.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package app;\r\n\r\nimport Data_access.FileUserDataAccessObject;\r\nimport entities.Game;\r\nimport entities.player.Player;\r\nimport interface_adapter.Initialized.InitializedViewModel;\r\nimport interface_adapter.Initiation.InitiationViewModel;\r\nimport interface_adapter.ViewManagerModel;\r\nimport view.ViewManager;\r\nimport view.InitiationView;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.*;\r\nimport java.util.List;\r\n\r\npublic class Main {\r\n\r\n    static List<Player> players;\r\n    static Game game;\r\n\r\n    // constructor\r\n\r\n    public static void main(String[] args) {\r\n        game = Game.getInstance();\r\n\r\n        JFrame application = new JFrame(\"Login Example\");\r\n        application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n\r\n        CardLayout cardLayout = new CardLayout();\r\n\r\n        // The various View objects. Only one view is visible at a time.\r\n        JPanel views = new JPanel(cardLayout);\r\n        application.add(views);\r\n\r\n        ViewManagerModel viewManagerModel = new ViewManagerModel();\r\n        new ViewManager(views, cardLayout, viewManagerModel);\r\n\r\n        InitiationViewModel initiationViewModel = new InitiationViewModel();\r\n        InitializedViewModel initializedViewModel = new InitializedViewModel();\r\n        FileUserDataAccessObject fileUserDataAccessObject = new FileUserDataAccessObject();\r\n\r\n        InitiationView initiationView = InitiationUseCaseFactory.create(viewManagerModel, initiationViewModel, initializedViewModel,fileUserDataAccessObject);\r\n        views.add(initiationView, initiationView.viewName);\r\n\r\n        players = new ArrayList<Player>();\r\n        // TODO: add Player objects to players, then shuffle players\r\n        // TODO: create game object, add a while loop that updates the game object in\r\n        //  each round (pre-turn, in-turn. etc.)\r\n\r\n        int round = 1;\r\n        while (true) { //TODO: replace true with some winning criteria\r\n            Player currPlayer = players.get(round);\r\n            round = round % players.size();\r\n\r\n            if (game.getSkipped()) {\r\n                //...\r\n            }\r\n            if (game.getDrawCard() > 0) {\r\n                //...\r\n            }\r\n\r\n            currPlayer.preTurn(game);\r\n            currPlayer.inTurn(game);\r\n            currPlayer.postTurn(game);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/app/Main.java b/src/app/Main.java
---- a/src/app/Main.java	(revision c6a2feb9926500bbb66f83ef1cc0aca98eb2bc6b)
-+++ b/src/app/Main.java	(date 1699410150657)
-@@ -2,6 +2,7 @@
- 
- import Data_access.FileUserDataAccessObject;
- import entities.Game;
-+import entities.player.HumanPlayerFactory;
- import entities.player.Player;
- import interface_adapter.Initialized.InitializedViewModel;
- import interface_adapter.Initiation.InitiationViewModel;
-@@ -11,6 +12,7 @@
- 
- import javax.swing.*;
- import java.awt.*;
-+import java.io.IOException;
- import java.util.*;
- import java.util.List;
- 
-@@ -38,9 +40,15 @@
- 
-         InitiationViewModel initiationViewModel = new InitiationViewModel();
-         InitializedViewModel initializedViewModel = new InitializedViewModel();
--        FileUserDataAccessObject fileUserDataAccessObject = new FileUserDataAccessObject();
- 
--        InitiationView initiationView = InitiationUseCaseFactory.create(viewManagerModel, initiationViewModel, initializedViewModel,fileUserDataAccessObject);
-+        FileUserDataAccessObject userDataAccessObject;
-+        try {
-+            userDataAccessObject = new FileUserDataAccessObject("./users.csv", new HumanPlayerFactory());
-+        } catch (IOException e) {
-+            throw new RuntimeException(e);
-+        }
-+
-+        InitiationView initiationView = InitiationUseCaseFactory.create(viewManagerModel, initiationViewModel, initializedViewModel,userDataAccessObject);
-         views.add(initiationView, initiationView.viewName);
- 
-         players = new ArrayList<Player>();
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d57b91c4-c160-4479-a59c-64bc9723df5c\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationState.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationState.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationViewModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationViewModel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/InitiationView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/InitiationView.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XmK5Xfppiyd8U9w7k1njBPOMf7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;viewAndViewModel&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d57b91c4-c160-4479-a59c-64bc9723df5c\" name=\"Changes\" comment=\"\" />\r\n      <created>1699228632630</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699228632630</updated>\r\n      <workItem from=\"1699228634022\" duration=\"11508000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision c6a2feb9926500bbb66f83ef1cc0aca98eb2bc6b)
-+++ b/.idea/workspace.xml	(date 1699473318111)
-@@ -6,11 +6,10 @@
-   <component name="ChangeListManager">
-     <list default="true" id="d57b91c4-c160-4479-a59c-64bc9723df5c" name="Changes" comment="">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/out/production/project/APIClient.class" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/Data_access/FileUserDataAccessObject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Data_access/FileUserDataAccessObject.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/app/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/Main.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationController.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationState.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationViewModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/Initiation/InitiationViewModel.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/view/InitiationView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/InitiationView.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/entities/player/HumanPlayerFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/player/HumanPlayerFactory.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-Index: src/entities/player/HumanPlayerFactory.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package entities.player;public class HumanPlayerFactory {\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/entities/player/HumanPlayerFactory.java b/src/entities/player/HumanPlayerFactory.java
---- a/src/entities/player/HumanPlayerFactory.java	(revision c6a2feb9926500bbb66f83ef1cc0aca98eb2bc6b)
-+++ b/src/entities/player/HumanPlayerFactory.java	(date 1699409811956)
-@@ -1,2 +1,4 @@
--package entities.player;public class HumanPlayerFactory {
-+package entities.player;
-+
-+public class HumanPlayerFactory implements PlayerFactory{
- }
