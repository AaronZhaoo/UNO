Index: src/view/InitializedView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport interface_adapter.Initialized.InitializedState;\r\nimport interface_adapter.Initialized.InitializedViewModel;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.beans.PropertyChangeEvent;\r\nimport java.beans.PropertyChangeListener;\r\nimport java.util.ArrayList;\r\n\r\n//public class InitializedView extends JPanel implements ActionListener, PropertyChangeListener {\r\n//    public final String viewName = \"Initialized\";\r\n//    private final InitializedViewModel initializedViewModel;\r\n//\r\n//    JLabel playername;\r\n//\r\n//    public InitializedView(InitializedViewModel initializedViewModel) {\r\n//        this.initializedViewModel = initializedViewModel;\r\n//        this.initializedViewModel.addPropertyChangeListener(this);\r\n//\r\n//        JLabel title = new JLabel(\"Initialized Screen\");\r\n//        title.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n//\r\n//        JLabel usernameInfo = new JLabel(\"Currently players: \");\r\n//        playername = new JLabel();\r\n//\r\n//        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\r\n//\r\n//        this.add(title);\r\n//        this.add(usernameInfo);\r\n//        this.add(playername);\r\n//    }\r\n//\r\n//    @Override\r\n//    public void actionPerformed(ActionEvent e) {\r\n//        System.out.println(\"Click \" + e.getActionCommand());\r\n//    }\r\n//\r\n//    @Override\r\n//    public void propertyChange(PropertyChangeEvent evt) {\r\n//        InitializedState state = (InitializedState) evt.getNewValue();\r\n//        // we don't know how many players there are, so we can't create player1, player2 ...\r\n//        // this is the best we can do, display all players in one string\r\n//        String output = \"\";\r\n//        ArrayList<String> players = state.get_players();\r\n//        for (int i = 0; i < players.size(); i++)\r\n//            output += (players.get(i) + \"\\n\");\r\n//        playername.setText(output);\r\n//    }\r\n//}\r\npublic class InitializedView extends JFrame {//!!!\r\n\r\n    public final String viewName;\r\n\r\n    public InitializedView() {\r\n\r\n        this.viewName = \"InitializedView\";\r\n        setTitle(\"UNO Game\");//!!!\r\n\r\n        setSize(1200, 1000);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//!!!\r\n        initializeUI();\r\n    }\r\n\r\n    private void initializeUI() {\r\n\r\n\r\n        JPanel mainPanel = new JPanel();\r\n        mainPanel.setLayout(new BorderLayout());\r\n        Color darkRed = new Color(218, 40, 40);\r\n        mainPanel.setBackground(darkRed);\r\n\r\n        JPanel playerPanel = new JPanel();\r\n        playerPanel.setLayout(new GridLayout(1, 4, 10, 10));\r\n        playerPanel.setOpaque(false);\r\n        ArrayList<Color> colorList = new ArrayList<>();\r\n        colorList.add(new Color(173, 216, 230));\r\n        colorList.add(new Color(255, 255, 210));\r\n        colorList.add(new Color(144, 238, 144));\r\n        colorList.add(new Color(255, 224, 255));\r\n\r\n\r\n        for (int i = 1; i <= 4; i++) {\r\n            JPanel playerInfo = new JPanel();\r\n            playerInfo.setLayout(new BorderLayout());\r\n            playerInfo.setBorder(BorderFactory.createLineBorder(Color.WHITE, 15));\r\n            Dimension preferredSize = playerInfo.getPreferredSize();\r\n            preferredSize.height = 120;\r\n            playerInfo.setPreferredSize(preferredSize);\r\n            JLabel usernameLabel = new JLabel(\"PLAYER \" + i + \" USERNAME\");//这个需要根据viewmodel来\r\n            JLabel scoreLabel = new JLabel(\"Score: 0\");\r\n            playerInfo.add(usernameLabel, BorderLayout.NORTH);\r\n            playerInfo.add(scoreLabel, BorderLayout.SOUTH);\r\n            playerPanel.add(playerInfo);\r\n            playerInfo.setBackground(colorList.get(i - 1));\r\n        }\r\n\r\n        JPanel cardPanel = new JPanel();\r\n        cardPanel.setLayout(new BorderLayout());\r\n        cardPanel.setOpaque(false);\r\n\r\n        JPanel infopanel = new JPanel();\r\n\r\n        JPanel playpanel = new JPanel();\r\n\r\n\r\n        for (int i = 0; i < 3; i++) {//根据viewmodel改\r\n            JButton cardButton = new JButton(\"Card \" + i);\r\n            cardButton.setPreferredSize(new Dimension(130, 200));\r\n            cardButton.setBorder(BorderFactory.createEmptyBorder());\r\n            cardButton.setBackground(Color.YELLOW); // fill here for the card's color\r\n            cardButton.setOpaque(true);\r\n            playpanel.add(cardButton);\r\n        }\r\n        JButton getCardButton = new JButton(\"Get Card\");\r\n        getCardButton.setPreferredSize(new Dimension(130, 200));\r\n        getCardButton.setBorder(BorderFactory.createEmptyBorder()); //!!!!!!这一行非常重要，如果button不去除边框就直接更改背景颜\r\n        //色，将会出现只有边上一圈改变了颜色的现象\r\n\r\n        getCardButton.setForeground(Color.WHITE);\r\n\r\n        // 设置按钮背景颜色为黑色\r\n        getCardButton.setBackground(Color.BLACK);\r\n\r\n        // 设置按钮文本的字体为粗体\r\n        getCardButton.setFont(new Font(\"Arial\", Font.BOLD, 14));\r\n\r\n        // 对于某些外观和感觉（如Mac OS的默认外观），需要这个设置才能使背景颜色生效\r\n        getCardButton.setOpaque(true);\r\n\r\n\r\n        JButton undoButton = new JButton(\"Undo\");\r\n        JButton whichcolorButton = new JButton();\r\n        whichcolorButton.setPreferredSize(new Dimension(130, 200));\r\n        whichcolorButton.setBorder(BorderFactory.createEmptyBorder());\r\n        whichcolorButton.setOpaque(true);\r\n        whichcolorButton.setBackground(Color.BLUE); //需要改这里！！！这个地方展示了正在play的颜色！！！\r\n        infopanel.add(getCardButton);\r\n        infopanel.add(whichcolorButton);\r\n        infopanel.add(undoButton);\r\n        infopanel.setOpaque(false);\r\n        playpanel.setOpaque(false);\r\n        cardPanel.add(infopanel, BorderLayout.NORTH);\r\n        cardPanel.add(playpanel, BorderLayout.CENTER);\r\n        cardPanel.setOpaque(false);\r\n\r\n        JPanel controlPanel = new JPanel();\r\n        controlPanel.setLayout(new FlowLayout());\r\n        controlPanel.setOpaque(false);\r\n\r\n        JButton nextTurnButton = new JButton(\"Next Turn\");\r\n\r\n\r\n        controlPanel.add(nextTurnButton);\r\n\r\n        mainPanel.add(playerPanel, BorderLayout.NORTH);\r\n        mainPanel.add(cardPanel, BorderLayout.CENTER);\r\n        mainPanel.add(controlPanel, BorderLayout.SOUTH);\r\n\r\n        add(mainPanel);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            public void run() {\r\n                new InitializedView().setVisible(true);\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/InitializedView.java b/src/view/InitializedView.java
--- a/src/view/InitializedView.java	(revision af741fc581163474dc283cc84753ed9e6173f189)
+++ b/src/view/InitializedView.java	(date 1700364903363)
@@ -11,163 +11,163 @@
 import java.beans.PropertyChangeListener;
 import java.util.ArrayList;
 
-//public class InitializedView extends JPanel implements ActionListener, PropertyChangeListener {
-//    public final String viewName = "Initialized";
-//    private final InitializedViewModel initializedViewModel;
-//
-//    JLabel playername;
-//
-//    public InitializedView(InitializedViewModel initializedViewModel) {
-//        this.initializedViewModel = initializedViewModel;
-//        this.initializedViewModel.addPropertyChangeListener(this);
-//
-//        JLabel title = new JLabel("Initialized Screen");
-//        title.setAlignmentX(Component.CENTER_ALIGNMENT);
-//
-//        JLabel usernameInfo = new JLabel("Currently players: ");
-//        playername = new JLabel();
-//
-//        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
-//
-//        this.add(title);
-//        this.add(usernameInfo);
-//        this.add(playername);
-//    }
-//
-//    @Override
-//    public void actionPerformed(ActionEvent e) {
-//        System.out.println("Click " + e.getActionCommand());
-//    }
-//
-//    @Override
-//    public void propertyChange(PropertyChangeEvent evt) {
-//        InitializedState state = (InitializedState) evt.getNewValue();
-//        // we don't know how many players there are, so we can't create player1, player2 ...
-//        // this is the best we can do, display all players in one string
-//        String output = "";
-//        ArrayList<String> players = state.get_players();
-//        for (int i = 0; i < players.size(); i++)
-//            output += (players.get(i) + "\n");
-//        playername.setText(output);
-//    }
-//}
-public class InitializedView extends JFrame {//!!!
-
-    public final String viewName;
-
-    public InitializedView() {
-
-        this.viewName = "InitializedView";
-        setTitle("UNO Game");//!!!
-
-        setSize(1200, 1000);
-        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//!!!
-        initializeUI();
-    }
+public class InitializedView extends JPanel implements ActionListener, PropertyChangeListener {
+    public final String viewName = "Initialized";
+    private final InitializedViewModel initializedViewModel;
 
-    private void initializeUI() {
+    JLabel playername;
 
+    public InitializedView(InitializedViewModel initializedViewModel) {
+        this.initializedViewModel = initializedViewModel;
+        this.initializedViewModel.addPropertyChangeListener(this);
 
-        JPanel mainPanel = new JPanel();
-        mainPanel.setLayout(new BorderLayout());
-        Color darkRed = new Color(218, 40, 40);
-        mainPanel.setBackground(darkRed);
+        JLabel title = new JLabel("Initialized Screen");
+        title.setAlignmentX(Component.CENTER_ALIGNMENT);
 
-        JPanel playerPanel = new JPanel();
-        playerPanel.setLayout(new GridLayout(1, 4, 10, 10));
-        playerPanel.setOpaque(false);
-        ArrayList<Color> colorList = new ArrayList<>();
-        colorList.add(new Color(173, 216, 230));
-        colorList.add(new Color(255, 255, 210));
-        colorList.add(new Color(144, 238, 144));
-        colorList.add(new Color(255, 224, 255));
+        JLabel usernameInfo = new JLabel("Currently players: ");
+        playername = new JLabel();
 
+        this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
 
-        for (int i = 1; i <= 4; i++) {
-            JPanel playerInfo = new JPanel();
-            playerInfo.setLayout(new BorderLayout());
-            playerInfo.setBorder(BorderFactory.createLineBorder(Color.WHITE, 15));
-            Dimension preferredSize = playerInfo.getPreferredSize();
-            preferredSize.height = 120;
-            playerInfo.setPreferredSize(preferredSize);
-            JLabel usernameLabel = new JLabel("PLAYER " + i + " USERNAME");//这个需要根据viewmodel来
-            JLabel scoreLabel = new JLabel("Score: 0");
-            playerInfo.add(usernameLabel, BorderLayout.NORTH);
-            playerInfo.add(scoreLabel, BorderLayout.SOUTH);
-            playerPanel.add(playerInfo);
-            playerInfo.setBackground(colorList.get(i - 1));
-        }
+        this.add(title);
+        this.add(usernameInfo);
+        this.add(playername);
+    }
 
-        JPanel cardPanel = new JPanel();
-        cardPanel.setLayout(new BorderLayout());
-        cardPanel.setOpaque(false);
-
-        JPanel infopanel = new JPanel();
-
-        JPanel playpanel = new JPanel();
-
-
-        for (int i = 0; i < 3; i++) {//根据viewmodel改
-            JButton cardButton = new JButton("Card " + i);
-            cardButton.setPreferredSize(new Dimension(130, 200));
-            cardButton.setBorder(BorderFactory.createEmptyBorder());
-            cardButton.setBackground(Color.YELLOW); // fill here for the card's color
-            cardButton.setOpaque(true);
-            playpanel.add(cardButton);
-        }
-        JButton getCardButton = new JButton("Get Card");
-        getCardButton.setPreferredSize(new Dimension(130, 200));
-        getCardButton.setBorder(BorderFactory.createEmptyBorder()); //!!!!!!这一行非常重要，如果button不去除边框就直接更改背景颜
-        //色，将会出现只有边上一圈改变了颜色的现象
-
-        getCardButton.setForeground(Color.WHITE);
-
-        // 设置按钮背景颜色为黑色
-        getCardButton.setBackground(Color.BLACK);
-
-        // 设置按钮文本的字体为粗体
-        getCardButton.setFont(new Font("Arial", Font.BOLD, 14));
-
-        // 对于某些外观和感觉（如Mac OS的默认外观），需要这个设置才能使背景颜色生效
-        getCardButton.setOpaque(true);
-
-
-        JButton undoButton = new JButton("Undo");
-        JButton whichcolorButton = new JButton();
-        whichcolorButton.setPreferredSize(new Dimension(130, 200));
-        whichcolorButton.setBorder(BorderFactory.createEmptyBorder());
-        whichcolorButton.setOpaque(true);
-        whichcolorButton.setBackground(Color.BLUE); //需要改这里！！！这个地方展示了正在play的颜色！！！
-        infopanel.add(getCardButton);
-        infopanel.add(whichcolorButton);
-        infopanel.add(undoButton);
-        infopanel.setOpaque(false);
-        playpanel.setOpaque(false);
-        cardPanel.add(infopanel, BorderLayout.NORTH);
-        cardPanel.add(playpanel, BorderLayout.CENTER);
-        cardPanel.setOpaque(false);
-
-        JPanel controlPanel = new JPanel();
-        controlPanel.setLayout(new FlowLayout());
-        controlPanel.setOpaque(false);
-
-        JButton nextTurnButton = new JButton("Next Turn");
-
-
-        controlPanel.add(nextTurnButton);
-
-        mainPanel.add(playerPanel, BorderLayout.NORTH);
-        mainPanel.add(cardPanel, BorderLayout.CENTER);
-        mainPanel.add(controlPanel, BorderLayout.SOUTH);
-
-        add(mainPanel);
+    @Override
+    public void actionPerformed(ActionEvent e) {
+        System.out.println("Click " + e.getActionCommand());
     }
 
-    public static void main(String[] args) {
-        SwingUtilities.invokeLater(new Runnable() {
-            public void run() {
-                new InitializedView().setVisible(true);
-            }
-        });
-    }
-}
\ No newline at end of file
+    @Override
+    public void propertyChange(PropertyChangeEvent evt) {
+        InitializedState state = (InitializedState) evt.getNewValue();
+        // we don't know how many players there are, so we can't create player1, player2 ...
+        // this is the best we can do, display all players in one string
+        String output = "";
+        ArrayList<String> players = state.get_players();
+        for (int i = 0; i < players.size(); i++)
+            output += (players.get(i) + "\n");
+        playername.setText(output);
+    }
+}
+//public class InitializedView extends JFrame {//!!!
+//
+//    public final String viewName;
+//
+//    public InitializedView() {
+//
+//        this.viewName = "InitializedView";
+//        setTitle("UNO Game");//!!!
+//
+//        setSize(1200, 1000);
+//        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//!!!
+//        initializeUI();
+//    }
+//
+//    private void initializeUI() {
+//
+//
+//        JPanel mainPanel = new JPanel();
+//        mainPanel.setLayout(new BorderLayout());
+//        Color darkRed = new Color(218, 40, 40);
+//        mainPanel.setBackground(darkRed);
+//
+//        JPanel playerPanel = new JPanel();
+//        playerPanel.setLayout(new GridLayout(1, 4, 10, 10));
+//        playerPanel.setOpaque(false);
+//        ArrayList<Color> colorList = new ArrayList<>();
+//        colorList.add(new Color(173, 216, 230));
+//        colorList.add(new Color(255, 255, 210));
+//        colorList.add(new Color(144, 238, 144));
+//        colorList.add(new Color(255, 224, 255));
+//
+//
+//        for (int i = 1; i <= 4; i++) {
+//            JPanel playerInfo = new JPanel();
+//            playerInfo.setLayout(new BorderLayout());
+//            playerInfo.setBorder(BorderFactory.createLineBorder(Color.WHITE, 15));
+//            Dimension preferredSize = playerInfo.getPreferredSize();
+//            preferredSize.height = 120;
+//            playerInfo.setPreferredSize(preferredSize);
+//            JLabel usernameLabel = new JLabel("PLAYER " + i + " USERNAME");//这个需要根据viewmodel来
+//            JLabel scoreLabel = new JLabel("Score: 0");
+//            playerInfo.add(usernameLabel, BorderLayout.NORTH);
+//            playerInfo.add(scoreLabel, BorderLayout.SOUTH);
+//            playerPanel.add(playerInfo);
+//            playerInfo.setBackground(colorList.get(i - 1));
+//        }
+//
+//        JPanel cardPanel = new JPanel();
+//        cardPanel.setLayout(new BorderLayout());
+//        cardPanel.setOpaque(false);
+//
+//        JPanel infopanel = new JPanel();
+//
+//        JPanel playpanel = new JPanel();
+//
+//
+//        for (int i = 0; i < 3; i++) {//根据viewmodel改
+//            JButton cardButton = new JButton("Card " + i);
+//            cardButton.setPreferredSize(new Dimension(130, 200));
+//            cardButton.setBorder(BorderFactory.createEmptyBorder());
+//            cardButton.setBackground(Color.YELLOW); // fill here for the card's color
+//            cardButton.setOpaque(true);
+//            playpanel.add(cardButton);
+//        }
+//        JButton getCardButton = new JButton("Get Card");
+//        getCardButton.setPreferredSize(new Dimension(130, 200));
+//        getCardButton.setBorder(BorderFactory.createEmptyBorder()); //!!!!!!这一行非常重要，如果button不去除边框就直接更改背景颜
+//        //色，将会出现只有边上一圈改变了颜色的现象
+//
+//        getCardButton.setForeground(Color.WHITE);
+//
+//        // 设置按钮背景颜色为黑色
+//        getCardButton.setBackground(Color.BLACK);
+//
+//        // 设置按钮文本的字体为粗体
+//        getCardButton.setFont(new Font("Arial", Font.BOLD, 14));
+//
+//        // 对于某些外观和感觉（如Mac OS的默认外观），需要这个设置才能使背景颜色生效
+//        getCardButton.setOpaque(true);
+//
+//
+//        JButton undoButton = new JButton("Undo");
+//        JButton whichcolorButton = new JButton();
+//        whichcolorButton.setPreferredSize(new Dimension(130, 200));
+//        whichcolorButton.setBorder(BorderFactory.createEmptyBorder());
+//        whichcolorButton.setOpaque(true);
+//        whichcolorButton.setBackground(Color.BLUE); //需要改这里！！！这个地方展示了正在play的颜色！！！
+//        infopanel.add(getCardButton);
+//        infopanel.add(whichcolorButton);
+//        infopanel.add(undoButton);
+//        infopanel.setOpaque(false);
+//        playpanel.setOpaque(false);
+//        cardPanel.add(infopanel, BorderLayout.NORTH);
+//        cardPanel.add(playpanel, BorderLayout.CENTER);
+//        cardPanel.setOpaque(false);
+//
+//        JPanel controlPanel = new JPanel();
+//        controlPanel.setLayout(new FlowLayout());
+//        controlPanel.setOpaque(false);
+//
+//        JButton nextTurnButton = new JButton("Next Turn");
+//
+//
+//        controlPanel.add(nextTurnButton);
+//
+//        mainPanel.add(playerPanel, BorderLayout.NORTH);
+//        mainPanel.add(cardPanel, BorderLayout.CENTER);
+//        mainPanel.add(controlPanel, BorderLayout.SOUTH);
+//
+//        add(mainPanel);
+//    }
+//
+//    public static void main(String[] args) {
+//        SwingUtilities.invokeLater(new Runnable() {
+//            public void run() {
+//                new InitializedView().setVisible(true);
+//            }
+//        });
+//    }
+//}
\ No newline at end of file
Index: src/app/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport data_access.FileUserDataAccessObject;\r\nimport entities.Game;\r\nimport entities.NumberCardsDeck.NumberCardsDeckCreator;\r\nimport entities.player.AIPlayerFactory;\r\nimport entities.player.HumanPlayerFactory;\r\nimport interface_adapter.Initialized.InitializedViewModel;\r\nimport interface_adapter.Initiation.InitiationViewModel;\r\nimport interface_adapter.ViewManagerModel;\r\nimport view.InitializedView;\r\nimport view.ViewManager;\r\nimport view.InitiationView;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class Main {\r\n    static Game game;\r\n\r\n    public static void main(String[] args) {\r\n        game = Game.getInstance();\r\n\r\n        JFrame application = new JFrame(\"Initiation Example\");\r\n        application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n\r\n        CardLayout cardLayout = new CardLayout();\r\n\r\n        // The various View objects. Only one view is visible at a time.\r\n        JPanel views = new JPanel(cardLayout);\r\n        application.add(views);\r\n\r\n        ViewManagerModel viewManagerModel = new ViewManagerModel();\r\n        new ViewManager(views, cardLayout, viewManagerModel);\r\n\r\n        InitiationViewModel initiationViewModel = new InitiationViewModel();\r\n        InitializedViewModel initializedViewModel = new InitializedViewModel();\r\n\r\n        FileUserDataAccessObject userDataAccessObject;\r\n        try {\r\n            userDataAccessObject = new FileUserDataAccessObject(\"./users.csv\", new AIPlayerFactory(), new HumanPlayerFactory(), new NumberCardsDeckCreator());\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        InitiationView initiationView = InitiationUseCaseFactory.create(viewManagerModel, initiationViewModel, initializedViewModel,userDataAccessObject);\r\n        views.add(initiationView, initiationView.viewName);\r\n\r\n        InitializedView initializedView = new InitializedView();//需要改成viewmodel\r\n        views.add(initializedView, initializedView.viewName);\r\n\r\n        application.pack();\r\n        application.setVisible(true);\r\n\r\n//        players = new ArrayList<Player>();\r\n//        // TODO: add Player objects to players, then shuffle players\r\n//        // TODO: create game object, add a while loop that updates the game object in\r\n//        //  each round (pre-turn, in-turn. etc.)\r\n\r\n//        int round = 1;\r\n//        while (true) { //TODO: replace true with some winning criteria\r\n//            Player currPlayer = players.get(round);\r\n//            round = round % players.size();\r\n//\r\n//            if (game.getSkipped()) {\r\n//                //...\r\n//            }\r\n//            if (game.getDrawCard() > 0) {\r\n//                //...\r\n//            }\r\n//\r\n//            currPlayer.preTurn(game);\r\n//            currPlayer.inTurn(game);\r\n//            currPlayer.postTurn(game);\r\n//\r\n//        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/Main.java b/src/app/Main.java
--- a/src/app/Main.java	(revision af741fc581163474dc283cc84753ed9e6173f189)
+++ b/src/app/Main.java	(date 1700365159005)
@@ -48,7 +48,7 @@
         InitiationView initiationView = InitiationUseCaseFactory.create(viewManagerModel, initiationViewModel, initializedViewModel,userDataAccessObject);
         views.add(initiationView, initiationView.viewName);
 
-        InitializedView initializedView = new InitializedView();//需要改成viewmodel
+        InitializedView initializedView = new InitializedView(initializedViewModel);
         views.add(initializedView, initializedView.viewName);
 
         application.pack();
Index: users.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>fbe1jbprji26;36\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users.csv b/users.csv
--- a/users.csv	(revision af741fc581163474dc283cc84753ed9e6173f189)
+++ b/users.csv	(date 1700365166718)
@@ -1,1 +1,2 @@
-fbe1jbprji26;36
+h6m9001ikwbm;36
+Human;ads;72R,67B,68Y,67B,72R,;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d57b91c4-c160-4479-a59c-64bc9723df5c\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XmK5Xfppiyd8U9w7k1njBPOMf7\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;presenterb&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"InitializedView\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.InitializedView\" />\r\n      <module name=\"project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.InitializedView\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d57b91c4-c160-4479-a59c-64bc9723df5c\" name=\"Changes\" comment=\"\" />\r\n      <created>1699228632630</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699228632630</updated>\r\n      <workItem from=\"1699228634022\" duration=\"11508000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision af741fc581163474dc283cc84753ed9e6173f189)
+++ b/.idea/workspace.xml	(date 1700365093791)
@@ -4,7 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d57b91c4-c160-4479-a59c-64bc9723df5c" name="Changes" comment="" />
+    <list default="true" id="d57b91c4-c160-4479-a59c-64bc9723df5c" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_11__00_18__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_11__00_18__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_17__19_46__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_17__19_46__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_18__01_04__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_18__01_04__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/app/Main.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/view/InitializedView$1.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/view/InitializedView.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/project/view/InitializedView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/app/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/view/InitializedView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/InitializedView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/users.csv" beforeDir="false" afterPath="$PROJECT_DIR$/users.csv" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -37,20 +48,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;presenterb&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "viewAndViewModel",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="InitializedView" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="view.InitializedView" />
