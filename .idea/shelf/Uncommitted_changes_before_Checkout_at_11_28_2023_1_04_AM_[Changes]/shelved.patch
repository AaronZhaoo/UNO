Index: src/interface_adapter/Initialized/InitializedState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.Initialized;\r\n\r\nimport entities.Game;\r\nimport entities.card.FunctionalCard;\r\nimport entities.card.NumberCard;\r\nimport entities.player.Player;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\n\r\npublic class InitializedState {\r\n    private ArrayList<String> players;\r\n    private Map<String, ArrayList<NumberCard>> playerNumCards;\r\n    private Map<String, ArrayList<NumberCard>> playerPlayableNumCards;\r\n    private Map<String, ArrayList<FunctionalCard>> playerFunCards;\r\n    private Map<String, ArrayList<FunctionalCard>> playerPlayableFunCards;\r\n\r\n    public InitializedState(InitializedState copy) {\r\n\r\n        players = copy.players;\r\n        playerNumCards = copy.playerNumCards;\r\n        playerPlayableNumCards = copy.playerPlayableNumCards;\r\n        playerFunCards = copy.playerFunCards;\r\n        playerPlayableFunCards = copy.playerPlayableFunCards;\r\n    }\r\n\r\n    // Because of the previous copy constructor, the default constructor must be explicit.\r\n    public InitializedState() {}\r\n\r\n    public ArrayList<String> get_players(){return players;}\r\n    public ArrayList<NumberCard> get_Number_Cards(){return playerNumCards.get(players.get(0));}\r\n    public ArrayList<FunctionalCard> get_Functional_Cards(){return playerFunCards.get(players.get(0));}\r\n    public ArrayList<NumberCard> get_Highlighted_Number_Cards(){return playerPlayableNumCards.get(players.get(0));}\r\n    public ArrayList<FunctionalCard> get_Highlighted_Functional_Cards(){return playerPlayableFunCards.get(players.get(0));}\r\n    public void set_players(ArrayList<String> players){this.players = players;}\r\n    public void set_cards(Map<String, ArrayList<NumberCard>> playerNumCards, Map<String, ArrayList<NumberCard>> playerPlayableNumCards,\r\n                          Map<String, ArrayList<FunctionalCard>> playerFunCards, Map<String, ArrayList<FunctionalCard>> playerPlayableFunCards){\r\n        this.playerPlayableFunCards = playerPlayableFunCards;\r\n        this.playerPlayableNumCards = playerPlayableNumCards;\r\n        this.playerNumCards = playerNumCards;\r\n        this.playerFunCards = playerFunCards;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/Initialized/InitializedState.java b/src/interface_adapter/Initialized/InitializedState.java
--- a/src/interface_adapter/Initialized/InitializedState.java	
+++ b/src/interface_adapter/Initialized/InitializedState.java	
@@ -28,7 +28,10 @@
     public InitializedState() {}
 
     public ArrayList<String> get_players(){return players;}
-    public ArrayList<NumberCard> get_Number_Cards(){return playerNumCards.get(players.get(0));}
+    public ArrayList<NumberCard> get_Number_Cards(){
+        int playerIndex = 0; //need to change this
+        return playerNumCards.get(players.get(playerIndex));
+    }
     public ArrayList<FunctionalCard> get_Functional_Cards(){return playerFunCards.get(players.get(0));}
     public ArrayList<NumberCard> get_Highlighted_Number_Cards(){return playerPlayableNumCards.get(players.get(0));}
     public ArrayList<FunctionalCard> get_Highlighted_Functional_Cards(){return playerPlayableFunCards.get(players.get(0));}
Index: users.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users.csv b/users.csv
--- a/users.csv	
+++ b/users.csv	
@@ -1,0 +1,2 @@
+9hjrk12124zt;36
+Human;a;6G,2B,8G,5R,3R,;
Index: src/view/InitializedView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport entities.card.NumberCard;\r\nimport interface_adapter.Initialized.InitializedState;\r\nimport interface_adapter.Initialized.InitializedViewModel;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.beans.PropertyChangeEvent;\r\nimport java.beans.PropertyChangeListener;\r\nimport java.util.ArrayList;\r\n\r\npublic class InitializedView extends JPanel implements ActionListener, PropertyChangeListener{\r\n\r\n    public final String viewName;\r\n    private final InitializedViewModel initializedViewModel;\r\n\r\n    ArrayList<JLabel> usernames = new ArrayList<>();\r\n    ArrayList<JButton> cardNames = new ArrayList<>();\r\n\r\n    public InitializedView(InitializedViewModel initializedViewModel) {\r\n        JLabel title = new JLabel(\"Initialized Screen\");\r\n        title.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n\r\n        this.viewName = \"Initialized\";\r\n        this.initializedViewModel = initializedViewModel;\r\n        this.initializedViewModel.addPropertyChangeListener(this);\r\n\r\n        setSize(1200, 1000);\r\n\r\n        this.setLayout(new BorderLayout());\r\n        Color darkRed = new Color(218, 40, 40);\r\n        this.setBackground(darkRed);\r\n\r\n        JPanel playerPanel = new JPanel();\r\n        playerPanel.setLayout(new GridLayout(1, 4, 10, 10));\r\n        playerPanel.setOpaque(false);\r\n        ArrayList<Color> colorList = new ArrayList<>();\r\n        colorList.add(new Color(173, 216, 230));\r\n        colorList.add(new Color(255, 255, 210));\r\n        colorList.add(new Color(144, 238, 144));\r\n        colorList.add(new Color(255, 224, 255));\r\n\r\n        for (int i = 1; i <= 4; i++) {\r\n            JPanel playerInfo = new JPanel();\r\n            playerInfo.setLayout(new BorderLayout());\r\n            playerInfo.setBorder(BorderFactory.createLineBorder(Color.WHITE, 15));\r\n            Dimension preferredSize = playerInfo.getPreferredSize();\r\n            preferredSize.height = 120;\r\n            playerInfo.setPreferredSize(preferredSize);\r\n            JLabel usernameLabel = new JLabel(\"Default player name\");\r\n            usernames.add(usernameLabel);\r\n            JLabel scoreLabel = new JLabel(\"Score: 0\");\r\n            playerInfo.add(usernameLabel, BorderLayout.NORTH);\r\n            playerInfo.add(scoreLabel, BorderLayout.SOUTH);\r\n            playerPanel.add(playerInfo);\r\n            playerInfo.setBackground(colorList.get(i - 1));\r\n        }\r\n\r\n        JPanel cardPanel = new JPanel();\r\n        cardPanel.setLayout(new BorderLayout());\r\n        cardPanel.setOpaque(false);\r\n\r\n        JPanel infopanel = new JPanel();\r\n\r\n        JPanel playpanel = new JPanel();\r\n\r\n\r\n        for (int i = 0; i < 3; i++) {//根据viewmodel改\r\n            JButton cardButton = new JButton();\r\n            cardButton.setPreferredSize(new Dimension(130, 200));\r\n            cardButton.setBorder(BorderFactory.createEmptyBorder());\r\n            cardButton.setBackground(Color.YELLOW); // fill here for the card's color\r\n            cardButton.setOpaque(true);\r\n            Border border = BorderFactory.createLineBorder(Color.BLUE, 2);\r\n            cardButton.setBorder(border);\r\n            playpanel.add(cardButton);\r\n            cardNames.add(cardButton);};\r\n\r\n    JButton getCardButton = new JButton(\"Get Card\");\r\n        getCardButton.setPreferredSize(new Dimension(130, 200));\r\n        getCardButton.setBorder(BorderFactory.createEmptyBorder()); //!!!!!!这一行非常重要，如果button不去除边框就直接更改背景颜\r\n    //色，将会出现只有边上一圈改变了颜色的现象\r\n\r\n        getCardButton.setForeground(Color.WHITE);\r\n\r\n    // 设置按钮背景颜色为黑色\r\n        getCardButton.setBackground(Color.BLACK);\r\n\r\n    // 设置按钮文本的字体为粗体\r\n        getCardButton.setFont(new Font(\"Arial\", Font.BOLD, 14));\r\n\r\n    // 对于某些外观和感觉（如Mac OS的默认外观），需要这个设置才能使背景颜色生效\r\n        getCardButton.setOpaque(true);\r\n\r\n\r\n    JButton undoButton = new JButton(\"Undo\");\r\n    JButton whichcolorButton = new JButton();\r\n        whichcolorButton.setPreferredSize(new Dimension(130, 200));\r\n        whichcolorButton.setBorder(BorderFactory.createEmptyBorder());\r\n        whichcolorButton.setOpaque(true);\r\n        whichcolorButton.setBackground(Color.BLUE); //需要改这里！！！这个地方展示了正在play的颜色！！！\r\n        infopanel.add(getCardButton);\r\n        infopanel.add(whichcolorButton);\r\n        infopanel.add(undoButton);\r\n        infopanel.setOpaque(false);\r\n        playpanel.setOpaque(false);\r\n        cardPanel.add(infopanel, BorderLayout.NORTH);\r\n        cardPanel.add(playpanel, BorderLayout.CENTER);\r\n        cardPanel.setOpaque(false);\r\n\r\n    JPanel controlPanel = new JPanel();\r\n        controlPanel.setLayout(new FlowLayout());\r\n        controlPanel.setOpaque(false);\r\n\r\n    JButton nextTurnButton = new JButton(\"Next Turn\");\r\n\r\n\r\n        controlPanel.add(nextTurnButton);\r\n\r\n        this.add(playerPanel, BorderLayout.NORTH);\r\n        this.add(cardPanel, BorderLayout.CENTER);\r\n        this.add(controlPanel, BorderLayout.SOUTH);\r\n\r\n}\r\n    public void actionPerformed(ActionEvent e) {\r\n        System.out.println(\"Click \" + e.getActionCommand());\r\n    }\r\n\r\n    @Override\r\n    public void propertyChange(PropertyChangeEvent evt) {\r\n        InitializedState state = (InitializedState) evt.getNewValue();\r\n        ArrayList<String> players = state.get_players();\r\n\r\n        for (int i = 0; i < players.size(); i++) {  // usernames.size() == 4\r\n            usernames.get(i).setText(players.get(i));\r\n        }\r\n\r\n        for (JButton cardName : cardNames) {\r\n            for (int i = 0; i < 3; i++) {\r\n                String name = initializedViewModel.getState().get_Number_Cards().get(i).getString();\r\n                cardName.setText(name);\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/InitializedView.java b/src/view/InitializedView.java
--- a/src/view/InitializedView.java	
+++ b/src/view/InitializedView.java	
@@ -139,11 +139,10 @@
             usernames.get(i).setText(players.get(i));
         }
 
-        for (JButton cardName : cardNames) {
-            for (int i = 0; i < 3; i++) {
-                String name = initializedViewModel.getState().get_Number_Cards().get(i).getString();
-                cardName.setText(name);
-            }
+        for (int i = 0; i < 3; i++) {
+            NumberCard card = initializedViewModel.getState().get_Number_Cards().get(i);
+            String name = card.getString();
+            cardNames.get(i).setText(name);
         }
     }
 
Index: src/use_case/initiation/InitiationInteractor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package use_case.initiation;\r\n\r\nimport data_access.FileUserDataAccessObject;\r\nimport entities.Game;\r\nimport entities.NumberCardsDeck.NumberCardsDeck;\r\nimport entities.card.FunctionalCard;\r\nimport entities.card.NumberCard;\r\nimport use_case.PreTurn.FindPlayableCardsInterface;\r\nimport use_case.drawcards.DrawCardsDataAccessInterface;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class InitiationInteractor implements InitiationInputDataBoundary {\r\n    public static Game game;\r\n    final FileUserDataAccessObject fileUserDataAccessObject;\r\n    final InitiationOutputDataBoundary initiationOutputDataBoundary;\r\n    final DrawCardsDataAccessInterface drawCardsDataAccessInterface;\r\n    final FindPlayableCardsInterface findPlayableCardsInterface;\r\n\r\n    public InitiationInteractor(FileUserDataAccessObject fileUserDataAccessObject,\r\n                                DrawCardsDataAccessInterface drawCardsDataAccessInterface,\r\n                                InitiationOutputDataBoundary initiationOutputDataBoundary,\r\n                                FindPlayableCardsInterface findPlayableCardsInterface){\r\n        this.fileUserDataAccessObject = fileUserDataAccessObject;\r\n        this.initiationOutputDataBoundary = initiationOutputDataBoundary;\r\n        this.drawCardsDataAccessInterface = drawCardsDataAccessInterface;\r\n        this.findPlayableCardsInterface = findPlayableCardsInterface;\r\n    }\r\n\r\n        public void execute(InitiationInputData initiationInputData){\r\n            Map<String, ArrayList<NumberCard>> playerNumCards = new HashMap<>();\r\n            Map<String, ArrayList<NumberCard>> playerPlayableNumCards = new HashMap<>();\r\n            Map<String, ArrayList<FunctionalCard>> playerPlayableFunCards = new HashMap<>();\r\n\r\n            int initialNumberCards = 5;\r\n            NumberCardsDeck numberCardsDeck = drawCardsDataAccessInterface.createNumberCardsDeck();\r\n            fileUserDataAccessObject.initiate(numberCardsDeck, initiationInputData);\r\n            for (String playerName : initiationInputData.getPlayerNames()){\r\n                ArrayList<NumberCard> numberCards = drawCardsDataAccessInterface.drawNumberCards(numberCardsDeck, initialNumberCards);\r\n                playerNumCards.put(playerName, numberCards);\r\n                playerPlayableFunCards.put(playerName, new ArrayList<FunctionalCard>());\r\n                fileUserDataAccessObject.savePlayerwithCards(playerName, numberCards, new ArrayList<FunctionalCard>());\r\n            }\r\n            game = Game.getInstance();\r\n            for (String player : playerNumCards.keySet()){\r\n                playerPlayableNumCards.put(player,\r\n                        findPlayableCardsInterface.findPlayableNumberCards(game.getTopCard().getColor(),playerNumCards.get(player)));\r\n            }\r\n            initiationOutputDataBoundary.prepareNewGameView(new InitiationOutputData(initiationInputData.getPlayerNames(), numberCardsDeck,\r\n                    playerNumCards, playerPlayableNumCards, playerPlayableFunCards));\r\n    };\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/use_case/initiation/InitiationInteractor.java b/src/use_case/initiation/InitiationInteractor.java
--- a/src/use_case/initiation/InitiationInteractor.java	
+++ b/src/use_case/initiation/InitiationInteractor.java	
@@ -38,13 +38,17 @@
             NumberCardsDeck numberCardsDeck = drawCardsDataAccessInterface.createNumberCardsDeck();
             fileUserDataAccessObject.initiate(numberCardsDeck, initiationInputData);
             for (String playerName : initiationInputData.getPlayerNames()){
+                // The following line will call drawCardsDAI to get cards from the API, and store
+                // it in a local varaible called numberCards
                 ArrayList<NumberCard> numberCards = drawCardsDataAccessInterface.drawNumberCards(numberCardsDeck, initialNumberCards);
                 playerNumCards.put(playerName, numberCards);
                 playerPlayableFunCards.put(playerName, new ArrayList<FunctionalCard>());
+                // The following line will save the current player with his/her cards in to csv
                 fileUserDataAccessObject.savePlayerwithCards(playerName, numberCards, new ArrayList<FunctionalCard>());
             }
             game = Game.getInstance();
             for (String player : playerNumCards.keySet()){
+                // Find playable NumberCards and return a list of playable numbercards
                 playerPlayableNumCards.put(player,
                         findPlayableCardsInterface.findPlayableNumberCards(game.getTopCard().getColor(),playerNumCards.get(player)));
             }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n<<<<<<< HEAD\r\n    <list default=\"true\" id=\"437e2396-4452-4db4-b169-fce7887c553b\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n=======\r\n    <list default=\"true\" id=\"437e2396-4452-4db4-b169-fce7887c553b\" name=\"Changes\" comment=\"\" />\r\n>>>>>>> ad4d475a478679b68bd65a7c63c91e280f43d8a1\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2YNVXW3uRfKyHlJ8oTNvPF4lNh8\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Cynthia&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"437e2396-4452-4db4-b169-fce7887c553b\" name=\"Changes\" comment=\"\" />\r\n      <created>1700366064659</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700366064659</updated>\r\n      <workItem from=\"1700366067168\" duration=\"2615000\" />\r\n      <workItem from=\"1700525759262\" duration=\"897000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,13 +4,24 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-<<<<<<< HEAD
     <list default="true" id="437e2396-4452-4db4-b169-fce7887c553b" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_11_13_2023_7_29_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_11_13_2023_7_29_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_17__19_46__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_17__19_46__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_18__01_04__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_18__01_04__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/interface_adapter/inTurn/InTurnPresenter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/SelectCard/SelectCardInputDataBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/SelectCard/SelectCardOutputDataBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/Undo/UndoInputDataBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/Undo/UndoInteractor.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/project/use_case/Undo/UndoInteractor.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/Undo/UndoOutputDataBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/use_case/initiation/InitiationInteractor.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/project/use_case/initiation/InitiationInteractor.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/project/view/InitializedView.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/project/view/InitializedView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/interface_adapter/Initialized/InitializedState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/Initialized/InitializedState.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/use_case/initiation/InitiationInteractor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/use_case/initiation/InitiationInteractor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/view/InitializedView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/InitializedView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/users.csv" beforeDir="false" afterPath="$PROJECT_DIR$/users.csv" afterDir="false" />
     </list>
-=======
-    <list default="true" id="437e2396-4452-4db4-b169-fce7887c553b" name="Changes" comment="" />
->>>>>>> ad4d475a478679b68bd65a7c63c91e280f43d8a1
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -38,20 +49,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Cynthia&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "Siwei",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
